package com.onezero.code;

import java.util.Arrays;

public class ReductionOperations5777 {

    /**
     * 给你一个整数数组 nums ，你的目标是令 nums 中的所有元素相等。完成一次减少操作需要遵照下面的几个步骤：
     *
     * 找出 nums 中的 最大 值。记这个值为 largest 并取其下标 i （下标从 0 开始计数）。如果有多个元素都是最大值，则取最小的 i 。
     * 找出 nums 中的 下一个最大 值，这个值 严格小于 largest ，记为 nextLargest 。
     * 将 nums[i] 减少到 nextLargest 。
     * 返回使 nums 中的所有元素相等的操作次数
     * 注：排序直接用Arrays.sort()，搞了个快排还是超时了
     */

    public static void main(String[] args){
        int[] arr={23383,27160,22681,104,35290,35397,40862,40138,21702,30026,39313,1834,15048,41640,11614,36095,38304,11848,6004,36113,16731,2128,44114,4618,5455,1094,29688,955,49424,49519,18429,16356,17606,7176,40948,12099,22573,19025,4556,10976,10462,16726,34563,11020,43035,17886,42481,46635,19300,29800,46048,21103,32539,31050,7484,1549,20448,25334,22502,27586,12324,16936,7128,16611,47852,33431,13703,39692,28289,1365,14771,1171,26039,9599,2316,47110,10501,29208,46178,33182,44445,27962,35698,14458,41339,45551,33856,29547,14628,34335,42501,2012,25881,44231,37739,21054,43243,41350,27938,3853,48330,19570,8237,13903,3110,20080,4636,5010,20340,19522,48749,10369,27275,37024,16539,8546,556,36748,2485,38705,14261,37374,30203,11241,46139,40827,33350,2453,24771,13134,22737,6490,13485,37578,44182,28374,38759,12722,32267,6844,43645,25564,19404,33038,32755,1128,21322,40117,26367,18439,1186,10287,13164,21479,36920,8857,22223,28131,13962,17468,44202,6319,24854,35890,22535,45031,35018,31753,34900,15378,4281,47545,2648,5550,8718,11122,10916,35273,13958,17565,49750,21774,39336,33154,16731,24125,22207,22301,7466,19086,15414,39583,46866,32034,8871,38009,36122,6834,21020,2565,26647,4797,24919,9656,8194,22342,7517,40317,38497,24776,5024,37407,36063,14662,37092,5358,17481,23914,19370,36992,35016,7492,30001,18166,7061,2999,19382,812,40218,43937,954,6009,27102,7544,2623,12316,15705,38457,27592,10619,7574,29551,10970,44623,15822,10417,48760,6740,28515,24791,35582,19270,36059,16608,46637,31262,20609,6563,13607};
        int[] arr1={5,1,3};
        Arrays.sort(arr);
        System.out.println(reductionOperations(arr1));
        System.out.println(reductionOperations(arr));
    }

    public static int reductionOperations(int[] nums) {
        int len = nums.length;
        if(len<2) return 0;
//        quickSortMethod(nums,0,len-1);
        Arrays.sort(nums);
        int count=0;
        int i=len-1;

        while(i>0){
            if(nums[i]!=nums[i-1]){
                count=count+len-i;
            }
            i--;
        }
        return count;
    }

    public static void quickSortMethod(int[] arr,int left,int right){
        if(left>right) return;
        int tmp=arr[left];
        int i=left;
        int j=right;
        while (i<j){
            while(arr[j]>=tmp&&j>i){
                j--;
            }
            if(tmp>arr[j]){
                arr[i]=arr[j];
            }
            while(arr[i]<=tmp&&i<j){
                i++;
            }
            if(tmp<arr[i]) {
                arr[j] = arr[i];
            }

        }
        arr[i]=tmp;
        quickSortMethod(arr,0,i-1);
        quickSortMethod(arr,i+1,right);
    }
}
